[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "mps_motion"
version = "0.4.3"
description = "Library for tracking motion in cardiac mps data"
authors = [{name = "Henrik Finsberg", email = "henriknf@simula.no"}]
license = {text = "MIT"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
keywords = ["motion tracking", "computer vision", "optical flow", "cardiac"]
requires-python = ">=3.8"
dependencies = [
    "ap-features",
    "cardiac-mps",
    "daiquiri",
    "dask-image",
    "dask[array,diagnostics]",
    "h5py",
    "matplotlib",
    "numba",
    "numpy",
    "opencv-contrib-python",
    "opencv-python",
    "scipy",
    "tqdm",
    "typer",
    "typing-extensions",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/ComputationalPhysiology/mps_motion"

[project.optional-dependencies]
benchmark = ["flowiz"]
dev = [
    "bump-my-version",
    "ipython",
    "pdbpp",
    "pre-commit",
]
docs = ["jupyter-book"]
gui = ["streamlit"]
pypi = ["build"]
test = [
    "pytest",
    "pytest-cov",
]

[project.scripts]
mps-motion = "mps_motion.__main__:app"

[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = false
license-files = ["LICENSE"]
include-package-data = false

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.distutils.bdist_wheel]
universal = 1

[tool.flake8]
exclude = "docs, venv"
ignore = "E203, E266, E501, W503, E731"
max-line-length = "88"
max-complexity = "18"
select = "B,C,E,F,W,T4"

[tool.aliases]
test = "pytest"

[tool.pytest.ini_options]
addopts = "--cov=mps_motion --cov-report html --cov-report xml -vv --cov-report term-missing"
testpaths = ["tests"]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.mypy]
files = ["src", "tests"]
ignore_missing_imports = true


[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    "examples",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 120

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = ["E402", "E741", "E743", "E731"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.bumpversion]
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
current_version = "0.4.3"


[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "Dockerfile"
search = 'ghcr.io/computationalphysiology/mps_motion:v{current_version}'
replace = 'ghcr.io/computationalphysiology/mps_motion:v{new_version}'
